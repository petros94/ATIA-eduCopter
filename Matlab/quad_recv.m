function [gyro_data, input_data] = quad_recv(port)
%QC_SERIALFUNCTIONS Summary of this function goes here
%   Detailed explanation goes here
    out_array = [0, 0, 0, 0, 0];
    
    %Send read request to quadcopter
    fwrite(port, out_array, 'uint16');
    
    %Get answer
    A = fread(port, 40);
    
    gyro_data = zeros(3,1);
    input_data = zeros(3,1);
    
    gyro_data(1) = typecast( ...
               [uint8(A(1)), uint8(A(2)), ...
               uint8(A(3)), uint8(A(4))], 'single');

    gyro_data(2) = typecast( ...
           [uint8(A(5)), uint8(A(6)), ...
            uint8(A(7)), uint8(A(8))], 'single');
    
    gyro_data(3) = typecast( ...
           [uint8(A(9)), uint8(A(10)), ...
            uint8(A(11)), uint8(A(12))], 'single');
        
    gyro_data(4) = typecast( ...
               [uint8(A(13)), uint8(A(14)), ...
               uint8(A(15)), uint8(A(16))], 'single');

    gyro_data(5) = typecast( ...
           [uint8(A(17)), uint8(A(18)), ...
            uint8(A(19)), uint8(A(20))], 'single');
    
    gyro_data(6) = typecast( ...
           [uint8(A(21)), uint8(A(22)), ...
            uint8(A(23)), uint8(A(24))], 'single');
        
    input_data(1) = typecast( ...
           [uint8(A(25)), uint8(A(26)), ...
            uint8(A(27)), uint8(A(28))], 'uint32');
        
    input_data(2) = typecast( ...
           [uint8(A(29)), uint8(A(30)), ...
            uint8(A(31)), uint8(A(32))], 'uint32');
        
    input_data(3) = typecast( ...
           [uint8(A(33)), uint8(A(34)), ...
            uint8(A(35)), uint8(A(36))], 'uint32');
        
    input_data(4) = typecast( ...
           [uint8(A(37)), uint8(A(38)), ...
            uint8(A(39)), uint8(A(40))], 'uint32');


end

